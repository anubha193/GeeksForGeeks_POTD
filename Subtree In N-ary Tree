class Solution{
    static HashMap<String,Integer> hm;
    public int duplicateSubtreeNaryTree(Node root){
        this.hm = new HashMap<>();
        int dub = 0;
        dfs(root);
        for(Map.Entry<String , Integer> en : hm.entrySet()){
            if(en.getValue()>1){
                dub+=1;
            }
        }
        return dub;
    } 
   static String dfs(Node node){
        StringBuilder sb = new StringBuilder(node.data + "#");
        for(Node child : node.children){
            sb.append(dfs(child));
        }
        String s = sb.toString();
        hm.put(s, hm.getOrDefault(s, 0) + 1);
        return s;
    }
    
}
